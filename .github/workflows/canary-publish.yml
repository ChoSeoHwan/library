name: canary publish

on:
  issue_comment:
    types: [ created ]

jobs:
  start-comment:
    name: start comment
    runs-on: ubuntu-latest
    if:
      (github.event.comment.author_association == 'MEMBER' || github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'CONTRIBUTOR') &&
      startsWith(github.event.comment.body, '/canary-publish')
    steps:
      - name: Comment to command
        uses: hasura/comment-progress@v2.1.0
        with:
          id: canary-publish-comment-${{ github.run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          number: ${{ github.event.issue.number }}
          message: |
            > /canary-publish

            Trying to publish canary version...
            If you want to see detailed execution status, please [click here](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).

  get-data:
    name: get data
    runs-on: ubuntu-latest
    if:
      (github.event.comment.author_association == 'MEMBER' || github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'CONTRIBUTOR') &&
      startsWith(github.event.comment.body, '/canary-publish')
    steps:
      - name: checkout pull request version
        uses: actions/checkout@v2
        with:
          ref: ${{ github.sha }}

      - name: get pr information
        uses: actions/github-script@v4
        id: pr
        with:
          script: |
            const { getPrData } = require('./.github/scripts');
            return await getPrData({ github, context, core });

      - name: make data file
        env:
          PR: ${{ steps.pr.outputs.result }}
        run: |
          mkdir ~/data
          echo $PR > ~/data/pr.json

      - name: upload data file
        uses: actions/upload-artifact@v2
        with:
          name: data
          path: ~/data

  canary-publish:
    needs: [get-data]
    name: canary publish
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - name: download data file
        uses: actions/download-artifact@v2
        with:
          name: data
          path: ~/data

      - name: set downloaded data value
        id: data
        run: |
          echo "::set-output name=pr::$(cat ~/data/pr.json)"

      - name: checkout pr version
        uses: actions/checkout@v2
        with:
          ref: ${{ fromJSON(steps.data.outputs.pr).head.ref }}
          repository: ${{ fromJSON(steps.data.outputs.pr).head.repo.full_name }}
          fetch-depth: 0

      - name: setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: set npm autority
        run: |
          yarn logout
          echo "@apollo-elements:registry=http://registry.npmjs.org/" > .npmrc
          echo "registry=http://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.npm_token }}

      - name: install dependencies
        run: yarn install

      - name: build all packages
        run: lerna run build

      - name: publish package
        id: published
        run: |
          RESULT=$(lerna publish --canary --conventional-prerelease --force-publish --preid alpha-${{ env.NUMBER }} --dist-tag alpha-${{ env.NUMBER }} --no-push --no-git-tag-version --yes)
          echo "::set-output name=result::$(echo $RESULT)"
        env:
          NUMBER: ${{ fromJSON(steps.data.outputs.pr).number }}

      - name: parsing published packages
        id: published-packages
        uses: actions/github-script@v4
        with:
          script: |
            const { PUBLISHED } = process.env;

            core.startGroup('publish command result');
            core.info(PUBLISHED);
            core.endGroup();

            const regexp = /(?<=Successfully published:)( - ([\w@/.\-+]+))*/gm;
            const listText = PUBLISHED.match(regexp)[0];

            core.startGroup('parsed package list by text');
            core.info(`list text : \n${listText}`);
            core.endGroup();

            const packageListRegexpt = /(?<= - )([\w@/.\-+]+)/g
            const packageList = listText.match(packageListRegexpt);

            core.startGroup('published packages');
            packageList.forEach((package) => {
              core.info(`${package}\n`);
            });
            core.endGroup();

            return packageList;

        env:
          PUBLISHED: ${{ steps.published.outputs.result }}

      - name: make data file
        run: echo $PUBLISHED_PACKAGES > ~/data/published-packages.json
        env:
          PUBLISHED_PACKAGES: ${{ steps.published-packages.outputs.result }}

      - name: upload data file
        uses: actions/upload-artifact@v2
        with:
          name: data
          path: ~/data

  finish-comment:
    name: finish comment
    runs-on: ubuntu-latest
    if: ${{ success() || failure() }}
    needs: [start-comment, canary-publish]
    steps:
      - uses: technote-space/workflow-conclusion-action@v2.0.1

      - name: download data file
        uses: actions/download-artifact@v2
        with:
          name: data
          path: ~/data

      - name: set data value
        id: data
        run: |
          echo "::set-output name=pr::$(cat ~/data/pr.json)"
          echo "::set-output name=published-packages::$(cat ~/data/published-packages.json)"

      - name: make comment
        if: always()
        id: comment
        uses: actions/github-script@v4
        with:
          script: |
            const { STATUS, TAG, ACTION_URL } = process.env;

            let message = "> /canary-publish\r\n\r\n";
            switch (STATUS) {
              case 'success':
                let { PACKAGES } = process.env;
                PACKAGES = JSON.parse(PACKAGES);

                message += `üéâ canary publish complete!\r\n`;
                message += `You can install canary version via \`yarn add package@${TAG}\`\r\n\r\n`
                message += '**Published package list**\r\n'

                // published package list Ï∂îÍ∞Ä
                if (PACKAGES.length > 0) {
                  PACKAGES.forEach((name) => {
                    message += `- \`${name}\`\r\n`
                  });
                } else {
                  message += '*No packages have been published*';
                }

                break;

              case 'failure':
                message += `‚ùó canary publish failed.\r\nCheck error in github [action page](${ACTION_URL}).\r\n`;
                break;
            }

            return { message };
        env:
          STATUS: ${{ env.WORKFLOW_CONCLUSION }}
          TAG: alpha-${{ fromJSON(steps.data.outputs.pr).number }}
          ACTION_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          PACKAGES: ${{ steps.data.outputs.published-packages }}

      - name: Comment on results
        if: always()
        uses: hasura/comment-progress@v2.1.0
        with:
          id: canary-publish-comment-${{ github.run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          number: ${{ github.event.issue.number }}
          message: ${{ fromJSON(steps.comment.outputs.result).message }}
